// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'home_cashed_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 4411435239814511357),
      name: 'HomeCashedDataEntity',
      lastPropertyId: const obx_int.IdUid(11, 1940312017619283296),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1624938803769529302),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 139500290947881257),
            name: 'countryName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3002370010992056418),
            name: 'temperatureUnit',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1285082015763504862),
            name: 'temperature',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8811634840658314900),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3154451983962070566),
            name: 'humidity',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8165253850785013842),
            name: 'lastUpdate',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 8465342130350337576),
            name: 'windSpeed',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5988630069086904974),
            name: 'minimumTemperature',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 7266908876380040827),
            name: 'maximumTemperature',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 1940312017619283296),
            name: 'hourlyJson',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 4411435239814511357),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    HomeCashedDataEntity: obx_int.EntityDefinition<HomeCashedDataEntity>(
        model: _entities[0],
        toOneRelations: (HomeCashedDataEntity object) => [],
        toManyRelations: (HomeCashedDataEntity object) => {},
        getId: (HomeCashedDataEntity object) => object.id,
        setId: (HomeCashedDataEntity object, int id) {
          object.id = id;
        },
        objectToFB: (HomeCashedDataEntity object, fb.Builder fbb) {
          final countryNameOffset = fbb.writeString(object.countryName);
          final temperatureUnitOffset = fbb.writeString(object.temperatureUnit);
          final temperatureOffset = fbb.writeString(object.temperature);
          final descriptionOffset = fbb.writeString(object.description);
          final humidityOffset = fbb.writeString(object.humidity);
          final lastUpdateOffset = fbb.writeString(object.lastUpdate);
          final windSpeedOffset = fbb.writeString(object.windSpeed);
          final minimumTemperatureOffset =
              fbb.writeString(object.minimumTemperature);
          final maximumTemperatureOffset =
              fbb.writeString(object.maximumTemperature);
          final hourlyJsonOffset = fbb.writeString(object.hourlyJson);
          fbb.startTable(12);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, countryNameOffset);
          fbb.addOffset(2, temperatureUnitOffset);
          fbb.addOffset(3, temperatureOffset);
          fbb.addOffset(4, descriptionOffset);
          fbb.addOffset(5, humidityOffset);
          fbb.addOffset(6, lastUpdateOffset);
          fbb.addOffset(7, windSpeedOffset);
          fbb.addOffset(8, minimumTemperatureOffset);
          fbb.addOffset(9, maximumTemperatureOffset);
          fbb.addOffset(10, hourlyJsonOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final countryNameParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
          final temperatureUnitParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final temperatureParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, '');
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 12, '');
          final lastUpdateParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final humidityParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final windSpeedParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final minimumTemperatureParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 20, '');
          final maximumTemperatureParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 22, '');
          final hourlyJsonParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 24, '');
          final object = HomeCashedDataEntity(
              id: idParam,
              countryName: countryNameParam,
              temperatureUnit: temperatureUnitParam,
              temperature: temperatureParam,
              description: descriptionParam,
              lastUpdate: lastUpdateParam,
              humidity: humidityParam,
              windSpeed: windSpeedParam,
              minimumTemperature: minimumTemperatureParam,
              maximumTemperature: maximumTemperatureParam,
              hourlyJson: hourlyJsonParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [HomeCashedDataEntity] entity fields to define ObjectBox queries.
class HomeCashedDataEntity_ {
  /// see [HomeCashedDataEntity.id]
  static final id = obx.QueryIntegerProperty<HomeCashedDataEntity>(
      _entities[0].properties[0]);

  /// see [HomeCashedDataEntity.countryName]
  static final countryName =
      obx.QueryStringProperty<HomeCashedDataEntity>(_entities[0].properties[1]);

  /// see [HomeCashedDataEntity.temperatureUnit]
  static final temperatureUnit =
      obx.QueryStringProperty<HomeCashedDataEntity>(_entities[0].properties[2]);

  /// see [HomeCashedDataEntity.temperature]
  static final temperature =
      obx.QueryStringProperty<HomeCashedDataEntity>(_entities[0].properties[3]);

  /// see [HomeCashedDataEntity.description]
  static final description =
      obx.QueryStringProperty<HomeCashedDataEntity>(_entities[0].properties[4]);

  /// see [HomeCashedDataEntity.humidity]
  static final humidity =
      obx.QueryStringProperty<HomeCashedDataEntity>(_entities[0].properties[5]);

  /// see [HomeCashedDataEntity.lastUpdate]
  static final lastUpdate =
      obx.QueryStringProperty<HomeCashedDataEntity>(_entities[0].properties[6]);

  /// see [HomeCashedDataEntity.windSpeed]
  static final windSpeed =
      obx.QueryStringProperty<HomeCashedDataEntity>(_entities[0].properties[7]);

  /// see [HomeCashedDataEntity.minimumTemperature]
  static final minimumTemperature =
      obx.QueryStringProperty<HomeCashedDataEntity>(_entities[0].properties[8]);

  /// see [HomeCashedDataEntity.maximumTemperature]
  static final maximumTemperature =
      obx.QueryStringProperty<HomeCashedDataEntity>(_entities[0].properties[9]);

  /// see [HomeCashedDataEntity.hourlyJson]
  static final hourlyJson = obx.QueryStringProperty<HomeCashedDataEntity>(
      _entities[0].properties[10]);
}
